version: '3.8'

services:
  # Redis for Celery background tasks
  redis:
    build:
      context: ./infra/redis
      dockerfile: Dockerfile
    container_name: hilabs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - hilabs-network

  # MinIO Object Storage
  minio:
    build:
      context: ./infra/minio
      dockerfile: Dockerfile
    container_name: hilabs-minio
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    environment:
      MINIO_ROOT_USER: hilabs
      MINIO_ROOT_PASSWORD: hilabsminio
    volumes:
      - ./infra/minio/data:/data
      - ./infra/minio/config:/root/.minio
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - hilabs-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - hilabs-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - MAX_WORKERS=2
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-hilabs}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-hilabs123456}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend/app/data:/app/data
      - ./backend/app/models:/app/models
    depends_on:
      - minio
      - redis
    networks:
      - hilabs-network

volumes:
  redis_data:

networks:
  hilabs-network:
    driver: bridge
